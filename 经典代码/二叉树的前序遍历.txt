µİ¹éĞ´·¨:
BinTreeNode
{
   BinTreeNode *left;
   BinTreeNode *right;
   Type data;
}
void PreOrderVisit(BinTreeNode* root)
{
   if(!root)
{
   VisitData(root->data);
   PreOrderVisit(root->left);
   PreOrderVisit(root->right);
}
}
Ñ­»·Ğ´·¨£º
bool PreOrderVisit(BinTreeNode* root)
{
    stack s;
    s.push(root);
    BinaryTreeNode* t=root;
    while(!s.empty())
    {
         t=s.top();
         while(t)
         {
             if(!visit(t)) return false;
             t=t->left;
             s.push(t);
           }
          s.pop();
        
          if(!s.empty())
         {
             
             t=s.pop();
             push(t->right);
          }

     }
     return true;
}